@article{paper1,
author={X. {Iturbe et al.}},
journal={IEEE Design and Test},
title={{Addressing Functional Safety Challenges in Autonomous Vehicles with the Arm Triple Core Lock-Step (TCLS) Architecture}},
year=2018,
}

@inproceedings{paper2,
author={B. {Venu et al}},
booktitle={IEEE International Workshop on Automotive Reliability and Test},
title={{A Fail-Functional Automotive CPU Subsystem Architecture for Mitigating Single Point of Failures}},
year=2017
}

@inproceedings{EspinosaRTL,
 author = {J. {Espinosa et al}},
 title = {{Analysis and RTL Correlation of Instruction Set Simulators for Automotive Microcontroller Robustness Verification}},
 booktitle = {DAC},
 year = 2015
}
%%https://nvidianews.nvidia.com/news/nvidia-announces-worlds-first-functionally-safe-ai-self-driving-platform

@MISC{TESLA,
    author = {TESLA},
    title  = {{Full Self-Driving Hardware on All Cars}},
    note   = {\url{https://www.tesla.com/autopilot}}
 }

@MISC{NVIDIA,
    author = {NVIDIA Inc},
    title  = {{NVIDIA Announces World's First Functionally Safe AI Self-Driving Platform}},
    note   = {\url{https://nvidianews.nvidia.com/news/nvidia-announces-worlds-first-functionally-safe-ai-self-driving-platform}},
    year = 2018
 }
 @MISC{ADASMark,
 author = {{EEMBC}},
 title = {{The ADASMark\textsuperscript{TM} Benchmark}},
 note = {\url{https://www.eembc.org/adasmark/index.php}}
 }

@MANUAL{ISO26262,
  author = {{International Standards Organization}},
  title = {{ISO/DIS 26262. Road Vehicles -- Functional Safety}},
  year = 2009
}

@MANUAL{J3016,
  author = {{SAE International}},
  title = {{{J3016}: Taxonomy and Definitions for Terms Related to On-Road Motor Vehicle Automated Driving Systems}},
  year = 2014
}

@manual{vetess,
 organization         = {ARTEMIS Joint Undertaking},
 timestamp            = {2014},
 title                = {{VeTeSS} project: www.vetess.eu},
 }

@INPROCEEDINGS{MitraDivers2,
 author={S. {Mitra et al.}},
 booktitle={DSN},
 title={Techniques for estimation of design diversity for combinational logic circuits},
 year=2001
}

@inproceedings{LiVe,
 author={C. {Hernandez} and J. {Abella}},
 title = {{LiVe: Timely Error Detection in Light-Lockstep Safety Critical Systems}},
 booktitle = {DAC},
 year = 2014
}



@inproceedings{DIMP,
 author = {S. {Alcaide et al.}},
 title = {{DIMP}: {A} Low-{C}ost {Di}versity {M}etric Based on Circuit {P}ath Analysis},
 booktitle = {DAC},
 year = 2017
}

@MISC{STlockstep,
    author = {{STMicroelectronics}},
    title  = {{32-bit Power Architecture microcontroller for automotive {SIL3/ASILD} chassis and safety applications}},
    year   = 2014
 }
@ARTICLE{TCAD,
author={C. Hernandez and J. Abella},
journal={IEEE TCAD},
title={{Timely Error Detection for Effective Recovery in Light-Lockstep Automotive Systems}},
year= 2015
}

@INPROCEEDINGS{DATEcheckpointing,
author={C. {Hernandez} and J. {Abella}},
booktitle={DATE},
title={Low-cost checkpointing in automotive safety-relevant systems},
year=2015
}

@MISC{infineon_aurix,
    author = {Infineon},
    title  = {{AURIX Multicore 32-bit Microcontroller Family to Meet Safety and Powertrain Requirements of Upcoming Vehicle Generations}},
    year = 2012
 }


@misc{triple_redundant_tk1,
author = {{General Electric}},
title = {{NVIDIA Tegra K1}},
booktitle = {GPU Technology Conference (GTC) 2015},
Howpublished = {\url{https://www.abaco.com/system/files/files/low_power_tegra_k1_gtc2015_df.pdf}},
year = 2015
}

@inproceedings{Baleani,
 author = {M. {Baleani et al}},
 title = {{Fault-tolerant Platforms for Automotive Safety-critical Applications}},
 booktitle = {CASES},
 year = {2003},
}

@article{Xavier,
 author               = {Danny Shapiro},
 journal              = {NVIDIA blog},
 title                = {{Introducing Xavier, the NVIDIA AI Supercomputer for the Future of Autonomous Transportation}},
 Howpublished         = {\url{https://blogs.nvidia.com/blog/2016/09/28/xavier/}},
 year                 = 2016
 }

 @article{Tegra1KAutonomous,
 author               = {Esther Francis},
 journal              = {Automotive Industries},
 title                = {Autonomous cars: no longer just science fiction},
 year                 = {2014},
 }

@misc{RenesasRCarH3,
Author = {{Renesas Electronics Corporation}},
Title = {{RENESAS R-Car H3}},
Howpublished = {\url{https://www.renesas.com/en-us/solutions/automotive/products/rcar-h3.html}}
}

@INPROCEEDINGS{rodinia1,
author={S. {Che et al.}},
booktitle={IISWC},
title={Rodinia: A benchmark suite for heterogeneous computing},
year=2009
}

@article{rodinia2,
  title={A characterization of the {R}odinia benchmark suite with comparison to contemporary {CMP} workloads},
  author={S. {Che et al.}},
  journal={IISWC},
  year=2010
}

@Misc{ARM,
  author 			= {{ARM}},
  title 			= {{ARM Expects Vehicle Compute Performance to Increase 100x in Next Decade}},
  year 				= 2015
}

@INPROCEEDINGS{GPUefficientconcurrency1,
author={H. {Dai et al}},
booktitle={HPCA},
title={Accelerate {GPU C}oncurrent {K}ernel {E}xecution by {M}itigating {M}emory {P}ipeline {S}talls},
year=2018
}

@INPROCEEDINGS{GPUefficientconcurrency2,
author={J. T. {Adriaens et al}},
booktitle={HPCA},
title={The case for {GPGPU} spatial multitasking},
year=2012
}

@INPROCEEDINGS{GPUefficientconcurrency3,
author={P. {Aguilera et al}},
booktitle={ICCD},
title={Fair share: {A}llocation of {GPU} resources for both performance and fairness},
year=2014
}


@INPROCEEDINGS{GPUoptimalHW,
author={S. {Lin et al}},
booktitle={ASPLOS},
title={The Architectural Implications of Autonomous Driving: Constraints and Acceleration},
year=2018
}

@article{whitehead2011precision,
author = {Whitehead, Nathan and Fit-Florea, Alex},
year = 2011,
title = {Precision \& performance: floating point and IEEE 754 compliance for NVIDIA GPUs},
}


@INPROCEEDINGS{NVIDIAscheduling,
author={T. {Amert et al}},
booktitle={2017 IEEE Real-Time Systems Symposium (RTSS)},
title={{GPU S}cheduling on the {NVIDIA TX2: H}idden {D}etails {R}evealed},
year=2017
}

@inproceedings{NVIDIApitfalls,
  title={Avoiding {P}itfalls when {U}sing {NVIDIA GPU}s for {R}eal-{T}ime {T}asks in {A}utonomous {S}ystems},
  author={M. {Yang et al}},
  booktitle={ECRTS},
  year=2018
}

@MISC{CUDA6.5,
    author = {NVIDIA},
    title  = {{NVIDIA CUDA TOOLKIT V6.5}},
    Howpublished   = {\url{http://developer.download.nvidia.com/compute/cuda/6_5/rel/docs/CUDA_Toolkit_Release_Notes.pdf}},
    year = 2014
 }

@MISC{CUDA9,
    author = {NVIDIA},
    title  = {{NVIDIA CUDA TOOLKIT 9.0.176}},
    Howpublished = {\url{https://developer.download.nvidia.com/compute/cuda/9.0/Prod/docs/sidebar/CUDA_Toolkit_Release_Notes.pdf}},
    year = 2018
 }

 @MISC{CUDA10,
    author = {{NVIDIA}},
    title  = {{NVIDIA CUDA Toolkit 10.0.130}},
    Howpublished  = {\url{https://docs.nvidia.com/pdf/CUDA_Toolkit_Release_Notes.pdf}},
    year = 2018
 }

@INPROCEEDINGS{Swapcodes,
author={M. B. {Sullivan et al}},
booktitle={MICRO},
title={SwapCodes: Error Codes for Hardware-Software Cooperative GPU Pipeline Error Detection},
year=2018
}

@INPROCEEDINGS{inter-intra-workgroup,
author={J. {Wadden et al}},
booktitle={ISCA},
title={Real-world design and evaluation of compiler-managed GPU redundant multithreading},
year=2014
}

@inproceedings{softwareapproaches_gpgpureliability,
  title={Understanding software approaches for GPGPU reliability},
  author={M. {Dimitrov et al.}},
  year=2009
}

@ARTICLE{duplication_comparison_gpu,
author={D. A. G. {Oliveira et al.}},
journal={IEEE Transactions on Nuclear Science},
title={Modern GPUs Radiation Sensitivity Evaluation and Mitigation Through Duplication With Comparison},
year=2014
}

@inproceedings{instruction_replication_gpu,
 author = {A. {Mahmoud et al.}},
 title = {Optimizing Software-directed Instruction Replication for GPU Error Detection},
 booktitle = {SC},
 year = 2018
}

@misc{apolloAuto,
Author = {Baidu},
Title = {{Apollo, an open autonomous driving platform.}},
Howpublished = {\url{http://apollo.auto/}},
Year = 2018
}

@INPROCEEDINGS{SergiIOLTS,
author={S. {Alcaide et al.}},
booktitle={IOLTS},
title={{Software-only Diverse Redundancy on GPUs for Autonomous Driving Platforms}},
year=2019
}

@INPROCEEDINGS{SergiDATE,
author={S. {Alcaide et al.}},
booktitle={DATE},
title={High-Integrity GPU Designs for Critical Real-Time Automotive Systems},
year=2019
}


@article{eembc,
 author = {J.A. {Poovey et al.}},
 title = {A Benchmark Characterization of the {EEMBC} Benchmark Suite},
 journal = {IEEE Micro},
 year = 2009,
}

@misc{EPI,
Author = {{European Processor Initiative}},
Title = {{European Processor Initiative}},
Howpublished = {\url{https://www.european-processor-initiative.eu/}},
Year = 2019
}

@INPROCEEDINGS{relaxing_criticallity,
author={B. H. {Meyer et al.}},
booktitle={CASES},
title={Cost-effective safety and fault localization using distributed temporal redundancy},
year=2011
}

@INPROCEEDINGS{on_demand_redundancy,
author={J. {Fu et al.}},
booktitle={SAMOS},
title={On-demand thread-level fault detection in a concurrent programming environment} ,
year=2013
}

@INPROCEEDINGS{designing_redundant_core,
author={S. S. {Mukherjee et al.}},
booktitle={ISCA},
title={Detailed design and evaluation of redundant multi-threading alternatives},
year=2002
}

@misc{RendundancyASILD,
Author={{Synopsys, Inc.}},
Title = {{Synopsys Announces Industry's First ASIL D Ready Dual-Core Lockstep Processor IP with Integrated Safety Monitor}},
Howpublished = {\url{https://www.eejournal.com/industry_news/synopsys-simplifies-automotive-soc-development-with-new-arc-\\functional-safety-processor-ip}},
Year = 2017
}

@article{PLR,
  author    = {A. {Shye et al.}},
  title     = {{PLR:} {A} Software Approach to Transient Fault Tolerance for Multicore
               Architectures},
  journal   = {{IEEE} Trans. Dependable Sec. Comput.},
  year      = 2009
}


@inproceedings{Haas2017,
author = {F. {Haas et al.}},
booktitle = {ARCS},
title = {{Fault-tolerant execution on cots multi-core processors with hardware transactional memory support}},
year = 2017
}

@inproceedings{Shye2007,
author={A {Shye et al.}},
booktitle={DSN},
title={Using Process-Level Redundancy to Exploit Multiple Cores for Transient Fault Tolerance},
year=2007
}

@article{Rotenberg1999,
author = {E. {Rotenberg}},
journal = {FTC},
title = {{AR-SMT: a microarchitectural approach to fault tolerance in microprocessors}},
year = 1999
}

@article{Scales2010,
author = {J. D. {Scales et al.}},
journal = {Operating Systems Review (ACM)},
title = {{The design of a practical system for fault-tolerant virtual machines}},
year = 2010
}

@article{Iturbe2019,
author = {X. {Iturbe et al.}},
journal = {ACM Transactions on Computer Systems},
title = {{The Arm triple core lock-step (TCLS) processor}},
year = 2019
}

@inproceedings{SMTredundancy,
author = {S. K. {Reinhardt et al.}},
booktitle = {ISCA},
title = {{Transient fault detection via simultaneous multithreading}},
year = 2000
}

@inproceedings{Mukherjee2002,
author = {S. S. {Mukherjee et al.}},
booktitle = {ISCA},
title = {{Detailed design and evaluation of redundant multithreading alternatives}},
year = 2002
}

@inproceedings{dynamic_coupled_cores,
author = {C. {LaFrieda et al.}},
booktitle = {DSN},
title = {{Utilizing dynamically coupled cores to form a resilient chip multiprocessor}},
year = {2007}
}

@inproceedings{Reis2005,
author = {G. A. {Reis et al.}},
booktitle = {CGO},
title = {{SWIFT: Software implemented fault tolerance}},
year = 2005
}

@article{Vargas2018,
author = {V. {Vargas et al.}},
journal = {Applied Sciences (Switzerland)},
title = {{NMR-MPar: A fault-tolerance approach for multi-core and many-core processors}},
year = 2018
}

@article{So2018,
author = {H. {So et al.}},
journal = {DATE},
title = {{Expert: Effective and flexible error protection by redundant multithreading}},
year = 2018
}
@inproceedings{Alhakeem2015,
author = {M. S. {Alhakeem et al.}},
booktitle = {ARCS},
title = {{A Framework for Adaptive Software-Based Reliability in COTS Many-Core Processors}},
year = 2015
}

@article{Shye2009,
author = {A. {Shye et al.}},
journal = {IEEE Transactions on Dependable and Secure Computing},
title = {{PLR: A software approach to transient fault tolerance for multicore architectures}},
year = 2009
}

@inproceedings{Mushtaq2013,
author = {H. {Mushtaq et al.}},
booktitle = {DATE},
title = {{Efficient software-based fault tolerance approach on multicore platforms}},
year = 2013
}

@inproceedings{Jeon2012,
author = {H. {Jeon et al.}},
booktitle = {MICRO},
title = {{Warped-DMR: Light-weight error detection for GPGPU}},
year = 2012
}

@inproceedings{Jain2019,
author = {S. {Jain et al.}},
booktitle = {RTAS},
title = {{Fractional GPUs: Software-based compute and memory bandwidth reservation for GPUs}},
year = 2019
}

@article{Nathan2015,
author = {R. Nathan and D.J. Sorin},
journal = {IEEE Computer Architecture Letters},
title = {{Argus-G: Comprehensive, low-cost error detection for GPGPU cores}},
year = 2015
}

@inproceedings{Gomaa2003,
author = {M {Gomaa et al.}},
booktitle = {ISCA},
title = {{Transient-fault recovery for chip multiprocessors}},
year = 2003
}

@INPROCEEDINGS{matmulDNN,
  author={H. {Tabani et al.}},
  booktitle={ISORC}, 
  title={A Cross-Layer Review of Deep Learning Frameworks to Ease Their Optimization and Reuse}, 
  year={2020},
}
  
 @INPROCEEDINGS{SergiDFT,
  author={S. {Alcaide et al.}},
  booktitle={DFT}, 
  title={Software-only based Diverse Redundancy for ASIL-D Automotive Applications on Embedded HPC Platforms}, 
  year={2020},
  volume={},
  number={},
  pages={1-4},
  doi={10.1109/DFT50435.2020.9250750}}
  
@article{DeRISCjournal,
author = {P. {Gomez et al.}},
journal = {Ada User Journal},
title = {{De-RISC – Dependable Real-time Infrastructure for Safety-critical Computer Systems}},
month = {June},
year = 2020
}

@InProceedings{taclebench,
  author =	{H. {Falk et al.}},
  title =	{{TACLeBench: A Benchmark Collection to Support Worst-Case Execution Time Research}},
  booktitle =	{WCET workshop},
  doi =		{10.4230/OASIcs.WCET.2016.2},
}

@ARTICLE{ClassicDiversity,
  author={A. Avizienis and J.P.J. Kelly},
  journal={Computer}, 
  title={Fault Tolerance by Design Diversity: Concepts and Experiments}, 
  year={1984},
  volume={17},
  number={8},
  pages={67-80},
  doi={10.1109/MC.1984.1659219}}
  
 @ARTICLE{DivDMR,
  author={P. {Reviriego et al.}},
  journal={IEEE Design   Test}, 
  title={Diverse Double Modular Redundancy: A New Direction for Soft-Error Detection and Correction}, 
  year={2013},
  volume={30},
  number={2},
  pages={87-95},
  doi={10.1109/MDT.2012.2232964}}
   
 @MISC{SafeDEWebsite, 
    author = {{BSC}},
    title  = {{BSC - CAOS Hardware Components}},
    note   = {\url{https://bsccaos.github.io}}    
}

@INPROCEEDINGS{SafeDE,
  author={F. {Bas et al.}},
  booktitle={IOLTS}, 
  title={{SafeDE}: a flexible Diversity Enforcement hardware module for light-lockstepping}, 
  year={2021},
  doi={10.1109/IOLTS52814.2021.9486715}}
  
@misc{SELENEgit,
Author={{H2020 SELENE consortium}},
Title = {{SELENE RISC-V open source hardware platform}},
Howpublished = {\url{https://gitlab.com/selene-riscv-platform}},
Year = 2021
}

@inproceedings{10.1145/3079856.3080225,
author = {Kaliorakis, Manolis and Gizopoulos, Dimitris and Canal, Ramon and Gonzalez, Antonio},
title = {MeRLiN: Exploiting Dynamic Instruction Behavior for Fast and Accurate Microarchitecture Level Reliability Assessment},
year = {2017},
isbn = {9781450348928},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3079856.3080225},
doi = {10.1145/3079856.3080225},
abstract = {Early reliability assessment of hardware structures using microarchitecture level simulators can effectively guide major error protection decisions in microprocessor design. Statistical fault injection on microarchitectural structures modeled in performance simulators is an accurate method to measure their Architectural Vulnerability Factor (AVF) but requires excessively long campaigns to obtain high statistical significance.We propose MeRLiN1, a methodology to boost microarchitecture level injection-based reliability assessment by several orders of magnitude and keep the accuracy of the assessment unaffected even for large injection campaigns with very high statistical significance. The core of MeRLiN is the grouping of faults of an initial list in equivalent classes. All faults in the same group target equivalent vulnerable intervals of program execution ending up to the same static instruction that reads the faulty entries. Faults in the same group occur in different times and entries of a structure and it is extremely likely that they all have the same effect in program execution; thus, fault injection is performed only on a few representatives from each group.We evaluate MeRLiN for different sizes of the physical register file, the store queue and the first level data cache of a contemporary microarchitecture running MiBench and SPEC CPU2006 benchmarks. For all our experiments, MeRLiN is from 2 to 3 orders of magnitude faster than an extremely high statistical significant injection campaign, reporting the same reliability measurements with negligible loss of accuracy. Finally, we theoretically analyze MeRLiN's statistical behavior to further justify its accuracy.},
booktitle = {Proceedings of the 44th Annual International Symposium on Computer Architecture},
pages = {241–254},
numpages = {14},
keywords = {fault injection, architectural vulnerability factor, transient faults, Microarchitecture level reliability estimation},
location = {Toronto, ON, Canada},
series = {ISCA '17}
}


@article{FaultModel,
author = {M. {Kaliorakis et al.}},
title = {MeRLiN: Exploiting Dynamic Instruction Behavior for Fast and Accurate Microarchitecture Level Reliability Assessment},
journal = {SIGARCH Comput. Archit. News},
year = {2017},
volume = {45},
number = {2},
doi = {10.1145/3140659.3080225},
pages = {241–254},
}

